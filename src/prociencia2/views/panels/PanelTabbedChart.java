/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package prociencia2.views.panels;

import java.util.logging.Level;
import java.util.logging.Logger;
import prociencia2.logic.core.entities.Persona;
import prociencia2.logic.core.entities.Test;
import prociencia2.logic.model.charts.FactoryChartResource;
import prociencia2.logic.model.sheetexcels.UpdateExcelStudent;
import prociencia2.views.componets.alerts.FactoryMessage;
import prociencia2.views.componets.table.FactoryColumnModel;
/**
 *
 * @author Klac
 */
public class PanelTabbedChart extends javax.swing.JPanel {

    private final Test test;
    private final Persona estudiante;
    private byte typeChart = 0; 
    
    public PanelTabbedChart(Test test,Persona estudiante) {
        this.test = test;
        this.estudiante = estudiante;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableViewStructureTest = new javax.swing.JTable();
        jPanelViewChartBar = new javax.swing.JPanel();
        jPanelControls = new javax.swing.JPanel();
        jButtonExportJPG = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jComboBox1 = new javax.swing.JComboBox();
        jButtonMoreInformation = new javax.swing.JButton();
        jButtonGeneraExcel = new javax.swing.JButton();
        jScrollPaneViewChart = new javax.swing.JScrollPane();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(getBackground());
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTableViewStructureTest.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTableViewStructureTest.setModel(new TableTestStructureModel());
        jTableViewStructureTest.setFillsViewportHeight(true);
        jTableViewStructureTest.getColumnModel().setColumnMargin(0);
        jTableViewStructureTest.setRowHeight(39);
        jTableViewStructureTest.setShowHorizontalLines(false);
        jTableViewStructureTest.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTableViewStructureTest);
        jTableViewStructureTest.setColumnModel(FactoryColumnModel.createModelColumnTableToChart());

        jPanelViewChartBar.setLayout(new java.awt.BorderLayout());

        jPanelControls.setBackground(new java.awt.Color(228, 240, 255));
        jPanelControls.setLayout(new java.awt.GridBagLayout());

        jButtonExportJPG.setBackground(new java.awt.Color(204, 255, 204));
        jButtonExportJPG.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonExportJPG.setText("Exportar imagen");
        jButtonExportJPG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExportJPGActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 154, 10, 10);
        jPanelControls.add(jButtonExportJPG, gridBagConstraints);

        jSeparator2.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator2.setPreferredSize(new java.awt.Dimension(50, 2));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        jPanelControls.add(jSeparator2, gridBagConstraints);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gr치fica de Barras", "Gr치fica de Lineas", "Gr치fica Circular" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 5);
        jPanelControls.add(jComboBox1, gridBagConstraints);

        jButtonMoreInformation.setBackground(new java.awt.Color(102, 204, 255));
        jButtonMoreInformation.setFont(jButtonExportJPG.getFont());
        jButtonMoreInformation.setForeground(jButtonExportJPG.getForeground());
        jButtonMoreInformation.setText("Ver Informaci칩n personal");
        jButtonMoreInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMoreInformationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelControls.add(jButtonMoreInformation, gridBagConstraints);

        jButtonGeneraExcel.setBackground(new java.awt.Color(255, 204, 204));
        jButtonGeneraExcel.setFont(jButtonExportJPG.getFont());
        jButtonGeneraExcel.setForeground(jButtonExportJPG.getForeground());
        jButtonGeneraExcel.setText("Generar excel");
        jButtonGeneraExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGeneraExcelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 16.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelControls.add(jButtonGeneraExcel, gridBagConstraints);

        jPanelViewChartBar.add(jPanelControls, java.awt.BorderLayout.NORTH);

        jScrollPaneViewChart.setBackground(getBackground());
        jScrollPaneViewChart.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPaneViewChart.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPaneViewChart.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPaneViewChart.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        putChartPanel(FactoryChartResource.createPanelChartBar(test));

        jPanelViewChartBar.add(jScrollPaneViewChart, java.awt.BorderLayout.CENTER);

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanelViewChartBar, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jPanelViewChartBar, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
            .addComponent(jSeparator1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExportJPGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExportJPGActionPerformed
        final Runnable run = new Runnable(){
            @Override
            public void run(){
                javax.swing.JFileChooser fileChooser = createFileChooser("Graficas");

                int option = fileChooser.showSaveDialog(PanelTabbedChart.this);
                
                if(option == javax.swing.JFileChooser.APPROVE_OPTION){
                    
                    java.io.File image = new java.io.File(fileChooser.getSelectedFile(),getTypeChartName()
                            +test.getNombre()+"_"+estudiante.toString()+".jpeg");
                    try {
                        org.jfree.chart.ChartUtilities.saveChartAsJPEG(image, chart, 1200, 600);
                        FactoryMessage.createMessageInformation(PanelTabbedChart.class, "PNGCorrecto");
                    } catch (java.io.IOException ex) {
                        java.util.logging.Logger.getLogger(PanelTabbedChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                        FactoryMessage.createMessageAlert(ex);
                    }
                }
            }
        };
        javax.swing.SwingUtilities.invokeLater(run);
    }//GEN-LAST:event_jButtonExportJPGActionPerformed

    private String getTypeChartName(){
        switch(typeChart){
            case 0: return "GB ";
            case 1: return "GL ";
            default: return "GC ";
        }
    }
    
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED){
            switch(jComboBox1.getSelectedIndex()){
                case 0:{
                    typeChart = 0;
                    putChartPanel(FactoryChartResource.createPanelChartBar(test));
                    break;
                }
                case 1:{
                    typeChart = 1;
                    putChartPanel(FactoryChartResource.createPanelChartLine(test));
                    break;
                }
                case 2:{
                    typeChart = 2;
                    putChartPanel(FactoryChartResource.createPanelPieChart(test));
                    break;
                }
            }
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jButtonMoreInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMoreInformationActionPerformed
        jScrollPaneViewChart.setViewportView(new PanelViewDataPerson(estudiante));
    }//GEN-LAST:event_jButtonMoreInformationActionPerformed

    private void jButtonGeneraExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGeneraExcelActionPerformed
        final Runnable run = new Runnable(){
            public void run(){
                javax.swing.JFileChooser fileChooser = createFileChooser("Informes");
                int option = fileChooser.showSaveDialog(PanelTabbedChart.this);
                
                if(option == javax.swing.JFileChooser.APPROVE_OPTION){
                    UpdateExcelStudent writeExcel = new UpdateExcelStudent(fileChooser.getSelectedFile(), estudiante);
                    try {
                        writeExcel.beginningWriting();
                        FactoryMessage.createMessageInformation(PanelTabbedChart.class, "Correcto");
                    } catch (Exception ex) {
                        Logger.getLogger(PanelTabbedChart.class.getName()).log(Level.SEVERE, null, ex);
                        FactoryMessage.createMessageAlert(ex);
                    }
                }
            }
        };
        javax.swing.SwingUtilities.invokeLater(run);
    }//GEN-LAST:event_jButtonGeneraExcelActionPerformed


    private void putChartPanel(org.jfree.chart.JFreeChart chart){
//        if(chart !=null) jScrollPaneViewChart.removeAll();
        this.chart = chart;
        jScrollPaneViewChart.setViewportView(new org.jfree.chart.ChartPanel(chart));
//        jScrollPaneViewChart.updateUI();
    }
    
    private javax.swing.JFileChooser createFileChooser(String folderFinal){
        java.io.File carpeta = new java.io.File(System.getProperty("user.home")+"\\Desktop\\Resultados Prueba Aptitudes & Intereses\\"+folderFinal);
        javax.swing.JFileChooser fileChooser;
        if(carpeta.exists()){
            fileChooser = new javax.swing.JFileChooser(carpeta);
        }else{
            try{
                if(carpeta.mkdirs()){
                    fileChooser = new javax.swing.JFileChooser(carpeta);
                }else{
                    fileChooser = new javax.swing.JFileChooser();
                }
            }catch(SecurityException ex){
                fileChooser = new javax.swing.JFileChooser();
            }
        }
        fileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);        
        return fileChooser;
    }
    
    private org.jfree.chart.JFreeChart chart;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExportJPG;
    private javax.swing.JButton jButtonGeneraExcel;
    private javax.swing.JButton jButtonMoreInformation;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel jPanelControls;
    private javax.swing.JPanel jPanelViewChartBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneViewChart;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableViewStructureTest;
    // End of variables declaration//GEN-END:variables
    
    private class TableTestStructureModel extends javax.swing.table.AbstractTableModel{

        @Override
        public int getRowCount() {
            return (test.getSecciones() == null) ? 0 : test.getSecciones().size() + 1;
        }

        @Override
        public int getColumnCount() {
            return 3;
        }
        
        @Override
        public Class getColumnClass(int column){
            return (column == 1)? Integer.class: String.class;
        }

        @Override
        public boolean isCellEditable(int row,int column){
            return false;
        }
        
        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            
            if(rowIndex == test.getSecciones().size()){
                switch(columnIndex){
                case 0: return "M츼XIMO";
                case 1: return (test.getNombre().compareTo("Aptitudes Vocacionales") == 0) ? 20 :30;
                case 2: return "M";
                }
            }
            
            switch(columnIndex){
                case 0: return test.getSecciones().get(rowIndex).getNombreFormal();
                case 1: return test.getSecciones().get(rowIndex).getSumatoria();
                case 2: return "T."+test.getSecciones().get(rowIndex).getNombre();
                default: return null;
            }
        }
        
        
    }
}
