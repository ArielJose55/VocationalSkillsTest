
package prociencia2.views.panels;

import prociencia2.logic.core.daos.PersonaDao;
import prociencia2.logic.core.entities.Persona;
import prociencia2.logic.model.ControlModel;
import prociencia2.logic.model.User;
import prociencia2.views.componets.table.FactoryColumnModel;
import prociencia2.views.dialogs.DialogWait;

/**
 *
 * @author Klac
 */
public class PanelExtratorStudent extends javax.swing.JPanel {

    private final java.util.List<Persona> LIST_STUDENTS;
    private final java.io.File files[];
    
    public PanelExtratorStudent(java.util.List<Persona> list,java.io.File[] archivo) {
        this.LIST_STUDENTS = list;
        this.files = archivo;
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));

        jTable1.setModel(new TableModelStudent());
        jTable1.setFillsViewportHeight(true);
        jTable1.setRowHeight(40);
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.setColumnModel(FactoryColumnModel.createModelColumnTableRegistro());

        jPanel1.setBackground(getBackground());

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 51, 51));
        jButton2.setText("Registrar Todos");
        jButton2.setPreferredSize(new java.awt.Dimension(160, 40));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 640, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if(LIST_STUDENTS == null || LIST_STUDENTS.isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(this, "Lista de estudiantes vacia","Error!",javax.swing.JOptionPane.WARNING_MESSAGE);
        }else{
            final DialogWait espere = new DialogWait();
            
            Runnable run = new Runnable(){
                public void run(){
                    PersonaDao personDao = new PersonaDao();
                    boolean registroExitoso = true;
                    try {
                        try{Thread.sleep(6000);}catch(InterruptedException ex1){}
                        personDao.registrarPersona(LIST_STUDENTS);
                        for(java.io.File archivo : files)
                            archivo.delete();
                    } catch (java.sql.SQLException ex) {
                        ex.printStackTrace();
                        registroExitoso = false;
                    }finally{
                        espere.stop();
                        if(registroExitoso){
                            if(ControlModel.getSesion().compareTo(User.ADMINISTRADOR) == 0){
                                ControlModel.getInstance().getConsultor().despertar();
                            }
                            javax.swing.JOptionPane.showMessageDialog(PanelExtratorStudent.this,
                                    "Registro exitoso","Mensaje",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                            ControlModel.getInstance().volverAlPanelAnterior();
                        }else{
                            javax.swing.JOptionPane.showMessageDialog(PanelExtratorStudent.this,
                                    "Ooops! la oparación no pudo ser realizada.\nservidor no responde o se encuentra temporalmente fuera de servicio\n"
                                            + "Por favor intentelo más tarde",
                                    "Advertencia",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
            };
            new Thread(run).start();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    private class TableModelStudent extends javax.swing.table.AbstractTableModel{
        
        @Override
        public int getRowCount(){
            return (LIST_STUDENTS == null)? 0: LIST_STUDENTS.size();
        }
        @Override
        public int getColumnCount(){
            return 4;
        }
        
        @Override
        public Object getValueAt(int fila, int columna){
            return getValueAt(LIST_STUDENTS.get(fila), columna);
        }
        
        private Object getValueAt(Persona persona, int column){
            switch(column){
                case 0: return persona.getNombreCompleto();
                case 1: return getAños(persona.getFechaNacimiento());
                case 2: return persona.getStringDeOcupacion(persona.getTipoOcupacion());
                case 3: return persona.getFechaRegistro().toString();
                default: return null;
            
            }
        }
        
        private int getAños(java.sql.Date fecha){
        java.util.Calendar calendar = java.util.Calendar.getInstance();
        calendar.setTimeInMillis(fecha.getTime());
        int añoNacimiento = calendar.get(java.util.Calendar.YEAR);
        return java.util.Calendar.getInstance().get(java.util.Calendar.YEAR) - añoNacimiento;
    }
    }
    
}
